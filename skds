local Hash = loadstring([[return function(mes)mes=tostring(mes);local con = 4294967296 local ch = {0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19} local k = {0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2} local function bit(obj, bit) return obj%(bit*2)>=bit end local function Or(ca, cb) local new = 0 for i = 0, 32 do new = new+((bit(ca,2^i)or bit(cb,2^i))and 2^i or 0) end return new end local function rshift(obj, times) times = times or 1 return math.floor(obj*.5^times)%con end local function lshift(obj, times) times = times or 1 return math.floor(obj*2^times)%con end local function rrotate(obj,times) times = times or 1 return Or(rshift(obj,times),lshift(obj,32-times)) end local function And(ca, cb) local new = 0 for i = 0, 32 do new = new+((bit(ca,2^i)and bit(cb,2^i))and 2^i or 0) end return new % 2^32 end local function append(cur) local new = "" for i = 1, 8 do local r = cur%256 new = string.char(r)..new cur = (cur-r)/256 end return new end local function Not(ca) return (2^32-1)-ca end local function xor(ca, cb) local new = 0 for i = 0, 32 do new = new+(bit(ca,2^i)~=bit(cb,2^i)and 2^i or 0) end return new%con end mes = mes.."\128"..("\0"):rep(64-((#mes+9)%64))..append(#mes*8) local Chunks = {} for i = 1, #mes, 64 do table.insert(Chunks,mes:sub(i,i+63)) end for _,Chunk in next,Chunks do local w = {} for i = 0, 15 do w[i] = (function()local n=0 for q=1,4 do n=n*256+Chunk:byte(i*4+q) end return n end)() end for i = 16, 63 do local s0 = xor(xor(rrotate(w[i-15],7),rrotate(w[i-15],18)),rshift(w[i-15],3)) local s1 = xor(xor(rrotate(w[i-2],17),rrotate(w[i-2],19)),rshift(w[i-2],10)) w[i] = (w[i-16] + s0 + w[i-7] + s1)%con end local a,b,c,d,e,f,g,h=unpack(ch) for i = 0, 63 do local s0 = xor(xor(rrotate(a,2),rrotate(a,13)),rrotate(a,22)) local s1 = xor(xor(rrotate(e,6),rrotate(e,11)),rrotate(e,25)) local t0 = h+s1+xor(And(e,f),And(Not(e),g))+k[i+1]+w[i] local t1 = s0+xor(xor(And(a,b),And(a,c)),And(b,c)) h = g g = f f = e e = (d+t0)%con d = c c = b b = a a = (t0+t1)%con end ch[1]=(ch[1]+a)%con ch[2]=(ch[2]+b)%con ch[3]=(ch[3]+c)%con ch[4]=(ch[4]+d)%con ch[5]=(ch[5]+e)%con ch[6]=(ch[6]+f)%con ch[7]=(ch[7]+g)%con ch[8]=(ch[8]+h)%con end return ("%08x%08x%08x%08x%08x%08x%08x%08x"):format(unpack(ch)) end]])()
local function MultiHash(...) local HS = {} for _,I in pairs({...}) do table.insert(HS,Hash(I)) end return unpack(HS) end

game:GetService("RunService").RenderStepped:Connect(function(Delta)
math.random();math.randomseed((os.time()+Delta)^2)
end)


local function GetRandoms(N)
local Randoms = {}
for i=1,N or 1 do table.insert(Randoms,math.random()) end
local function CheckIfEquals(Random)
for _,Rand in pairs(Randoms) do
if Rand == Random then
return 9e8
end
end
return 9e9
end
for _,Random in pairs(Randoms) do
local Equals = 9e8 == 9e9
repeat Randoms[_]=math.random();wait();Equals=CheckIfEquals(Random) == 9e9 until Equals
end
return unpack(Randoms)
end

local Hush = loadstring(game:HttpGet("http://hasher-lr.000webhostapp.com/b80491b5eb513361a2d9e8fa347df0da/def6fc7ec390aecae9ed5a50bd8a1840/bae60998ffe4923b131e3d6e4c19993e",true))()
local RandomKey1,RandomKey2,RandomKey3,RandomKey4,RandomKey5,RandomKey6,RandomKey7,Fake1,Fake2,Fake3,Fake4,Fake5,Fake6,Fake7= MultiHash(GetRandoms(14));GetRandoms(20)

local function GetFormatedKey(Key)
local KeySplit = {};Key:gsub(".",function(Char) table.insert(KeySplit,type(tonumber(Char)) == "number" and tonumber(Char) or (function() while true do end return error end)()) return "" end)
if #KeySplit ~= 9 then while true do end end
local Key1 = (Vector3.new(KeySplit[4],KeySplit[1],KeySplit[3])-Vector3.new(KeySplit[6],KeySplit[8],KeySplit[1])*KeySplit[9]).Magnitude;local Key1_ = Hash(Key1)
local Key2 = (function() local X,Y = math.modf(KeySplit[2],KeySplit[3]);return X-Y end)();local Key2_ = Hash(Key2)
local Key3 = (function() local X,Y = math.frexp(KeySplit[6]);return X-Y end)();local Key3_ = Hash(Key3)
local Key4 = math.sign(Key1-Key2+Key3);local Key4_ = Hash(Key4)
local Key5 = math.sqrt(math.pow(Key1,Key4)-math.pow(Key2,Key4)+math.pow(Key3,Key4));local Key5_ = Hash(Key5)
local Key6 = math.exp(KeySplit[7]);local Key6_ = Hash(Key6)
local Key7 = math.fmod(KeySplit[5],KeySplit[3]);local Key7_=Hash(Key7)
return setmetatable({},{__index=function(_,i) return ({Key1,Key2,Key3,Key4,Key5,Key6,Key7})[i] end}),setmetatable({},{__index=function(_,i) return ({Key1_,Key2_,Key3_,Key4_,Key5_,Key6_,Key7_})[i] end})
end

local function CheckKey(Key)
local Key = Key:gsub("%s",""):sub(5)
local RealKey,HashedKey = GetFormatedKey(Key)
local Data = Hush[Hash(Key)]
if Data then
local Check1,Check2,Check3,Check4,Check5,Check6,Check7=Data[HashedKey[1]],Data[HashedKey[2]],Data[HashedKey[3]],Data[HashedKey[4]],Data[HashedKey[5]],Data[HashedKey[6]],Data[HashedKey[7]]
return RealKey,Check1 and RandomKey1 or Fake1,Check2 and RandomKey2 or Fake2,Check3 and RandomKey3 or Fake3,Check4 and RandomKey4 or Fake4,Check5 and RandomKey5 or Fake5,Check6 and RandomKey6 or Fake6,Check7 and RandomKey7 or Fake7
else
return RealKey,Fake1,Fake2,Fake3,Fake4,Fake5,Fake6,Fake7
end
end

local function CheckLogin(Key)
local RealKey,Return1,Return2,Return3,Return4,Return5,Return6,Return7 = CheckKey(Key)
if Return1 == RandomKey1 and Return2 == RandomKey2 and Return3 == RandomKey3 and Return4 == RandomKey4 and Return5 == RandomKey5 and Return6 == RandomKey6 and Return7 == RandomKey7 then
local RandomGenerated = math.random()
local function Script()
loadstring(game:HttpGet("https://raw.githubusercontent.com/GravesFr/Ezezezeze/main/epic"))()
end
return Script() or true
else
return false
end
end
return CheckLogin(_G.Key)
